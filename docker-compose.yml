version: '3.8'

volumes:
  postgres-data:
  n8n-data:

services:
  postgres:
    image: postgres:16-alpine
    restart: always
    environment:
      POSTGRES_DB: n8n
      POSTGRES_USER: "${DB_USER}"
      POSTGRES_PASSWORD: "${DB_PASSWORD}"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    networks:
      - n8n-network

  n8n:
    build:
      context: .
      dockerfile: Dockerfile
    image: n8n-custom:latest
    restart: always
    depends_on:
      - postgres
    command: ["n8n"]
    user: n8n
    environment:
      # Datenbank-Konfiguration
      DB_TYPE: postgresdb
      DB_POSTGRESDB_HOST: postgres
      DB_POSTGRESDB_PORT: '5432'
      DB_POSTGRESDB_DATABASE: n8n
      DB_POSTGRESDB_USER: "${DB_USER}"
      DB_POSTGRESDB_PASSWORD: "${DB_PASSWORD}"
      
      # Basic Auth
      N8N_BASIC_AUTH_ACTIVE: 'true'
      N8N_BASIC_AUTH_USER: "${N8N_BASIC_AUTH_USER}"
      N8N_BASIC_AUTH_PASSWORD: "${N8N_BASIC_AUTH_PASSWORD}"
      
      # Webhook URL
      WEBHOOK_URL: "${WEBHOOK_URL}"
      
      # Execution settings
      EXECUTIONS_PROCESS: main
      
      # n8n Datenverzeichnis
      N8N_USER_FOLDER: /home/n8n/.n8n
      
      # Node.js Modulpfad
      NODE_PATH: /usr/lib/node_modules:/usr/local/lib/node_modules
      
      # VM2 und weitere Einstellungen
      N8N_SKIP_WEBHOOK_DEREGISTRATION_SHUTDOWN: 'true'
      GENERIC_TIMEZONE: Europe/Berlin
      
    ports:
      - "5678:5678"
    volumes:
      # n8n Daten
      - n8n-data:/home/n8n/.n8n
      
      # Deine Ordner f√ºr die Datenverarbeitung
      - /srv/sds-converter/sample_pdfs:/data/sample_pdfs
      - /srv/sds-converter/templates:/data/templates
      - /srv/sds-converter/icons:/data/icons
      - /srv/sds-converter/output:/data/output
      
    networks:
      - n8n-network
      
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5678/healthz"]
      interval: 30s
      timeout: 5s
      retries: 3

networks:
  n8n-network:
    driver: bridge
